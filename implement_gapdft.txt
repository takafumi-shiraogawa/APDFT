Note for implementation of APDFT with molecular geometry changes
From May 24th, 2021.


Flowchart:
1. Calculate and save electronic energy and electron density of
   a reference system
2. Calculate stencil coefficients
3. Calculate one-electron integrals of both terms
4. Update the geometry of the target system
5. Re-calculate integral of the former terms
6. Back to 4


First milestone of the implementation is to calculate the energy
of the charge and geometry changes.
For this purpose, tasks are
1. Make an argument "energies_geometries" for generating input
   files and folders need to be modified.
2. Make directries and inputs of QM calculations for obtaining
   perturbed electron densities with molecular geometry changes.
3. Set targets with different molecular geometry from a reference
   molecule. (Read target geometry)
4. Numerical integration
5. Nuclear-nuclear repulsion


apdft.commandline.py

change apdft.commandline.build_main_commandline to allow
for 'energies_geometries' for command line arguments

Cost estimation:
   commandline.mode_energies_geometries
   -> derivatives.estimate_cost_and_coverage_general()
   -> physics.estimate_cost_and_coverage_general(self)
   -> physics.enumerate_all_targets_general(self)
   -> apdft.math.IntegerPartitions.partition

Make directories and commands.sh of QM calculations:
   commandline.mode_energies_geometries
   -> derivatives.prepare(conf.debug_validation)
      derivatives.analyse(conf.debug_validation)
   -> physics.apdft.prepare_general

APDFT
   commandline.mode_energies_geometries
   -> derivatives.analyse_general(conf.debug_validation)
   -> physics.analyse_general
   -> physics.predict_all_targets_general
      -> physics.enumerate_all_targets_general


To use new molecular geometry:
   1. Read a new geometry of a reference molecule.
      Need to change commandline.
      cli.py energies_geometries *.xyz *.xyz
   2. Make a new option in apdft.conf.
      Need to change settings.Configuration.__init__

   Read a actual coordinate
      commandline.mode_energies_geometries
      -> apdft.read_xyz  (__init__.py)

   modeshort_2: *.xyz
   configuration = apdft.settings.Configuration()
   configuration.energy_geometry2

   The target geometry is obtained at
   commandline.mode_energies_geometries.
   This needs to used in inputs of QM calculations.
   physics.prepare_general needs to be changed.
   -> self._calculator.get_input
   -> calculator.pyscf
   calculator.pyscf needs to obtain the target geometry.
   /src/apdft/calculator/templates/pyscf2.py was made for
   a new template.


Calculation of nuclear-nuclear repulsion energy
   This can be done in QM calculations by PySCF.
   The template of the QM calculation is
   /src/apdft/calculator/templates/pyscf2.py
   mol.energy_nuc()

   In APDFT results, only total energies are presented,
   and electronic energy is not presented in the QM calculation
   results.
   In the development version of APDFT (GitHub not released version),
   the nuclear-nuclear repulsion energy is printed as "NN_ENERGY" in
   the QM calculation results.
   physics.Coulomb.nuclei_nuclei(coordinates, charges)

   commandline.mode_energies_geometries
   -> physics.analyse_general
   -> physics.predict_all_targets_general


Note for implementation of higher-order APDFT (higher than APDFT3)
The followings need to be modified:
  For perturbed electron densities
    settings.APDFT.estimate_cost_and_coverage_general
    physics.APDFT.prepare

